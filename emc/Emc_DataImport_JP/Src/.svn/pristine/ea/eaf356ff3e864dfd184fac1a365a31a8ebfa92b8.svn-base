<?php
    /*
     * @announce_edit_proc.php
     *
     * @create 2020/03/13 AKB Chien
     * @update
     */
    require_once('common/common.php');
    require_once('common/session_check.php');

    header('Content-type: text/html; charset=utf-8');
    header('X-FRAME-OPTIONS: DENY');

    define('DISPLAY_TITLE', 'お知らせ登録編集画面');

    if(fncConnectDB() == false){
        $_SESSION['LOGIN_ERROR'] = 'DB接続に失敗しました。';
        header('Location: login.php');
        exit;
    }

    if(!isset($_SESSION['LOGINUSER_INFO'])) {
        $strShow = '<script>alert("'.PUBLIC_MSG_008_JPN.' / '.PUBLIC_MSG_008_ENG.'");';
        $strShow .= ' window.location.href="login.php";</script> ';
        echo $strShow;
        exit;
    }

    fncSessionTimeOutCheck(1);

    // check if ajax -> do something | access this file directly -> stop
    if(!(!empty($_SERVER['HTTP_X_REQUESTED_WITH'])
        && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest')) {
        exit;
    }

    // ログインユーザ情報を取得
    $objLoginUserInfo = unserialize($_SESSION['LOGINUSER_INFO']);

    $intLanguageType = $objLoginUserInfo->intLanguageType;

    $arrTitleMsg =  array(
        'ANNOUNCE_EDIT_MSG_003',

        'PUBLIC_MSG_021',
        'PUBLIC_MSG_022',
        'PUBLIC_MSG_023',
        'PUBLIC_MSG_024',
        'PUBLIC_MSG_025',
        'PUBLIC_MSG_026',
        'PUBLIC_MSG_027',
        'PUBLIC_MSG_028',
        'PUBLIC_MSG_029',
        'PUBLIC_MSG_030',

        'PUBLIC_MSG_010',
        'PUBLIC_MSG_041',

        // msg check file
        'PUBLIC_MSG_011',
        'PUBLIC_MSG_012',
        'PUBLIC_MSG_013',
        'PUBLIC_MSG_014',
        'PUBLIC_MSG_015',
        'PUBLIC_MSG_016',
        'PUBLIC_MSG_017',
        'PUBLIC_MSG_018',
        'PUBLIC_MSG_019',

        'PUBLIC_MSG_031',
        'PUBLIC_MSG_032',
        'PUBLIC_MSG_033',
        'PUBLIC_MSG_034',
        'PUBLIC_MSG_035',
        'PUBLIC_MSG_036',
        'PUBLIC_MSG_037',
        'PUBLIC_MSG_038',
        'PUBLIC_MSG_039',
        'PUBLIC_MSG_040',

        'PUBLIC_MSG_002',

        'PUBLIC_MSG_001',
    );

    define('LENGTH_TITLE_JPN_JE', 20);      // length title jpn ja -> eng
    define('LENGTH_TITLE_JPN_EJ', 20);      // length title jpn eng -> jp
    define('LENGTH_TITLE_ENG_JE', 100);     // length title eng ja -> eng
    define('LENGTH_TITLE_ENG_EJ', 100);     // length title eng eng -> jp

    define('LENGTH_CONTENTS_JPN_JE', 1000); // length contents jpn ja -> eng
    define('LENGTH_CONTENTS_JPN_EJ', 1000); // length contents jpn eng -> jp
    define('LENGTH_CONTENTS_ENG_JE', 5000); // length contents eng ja -> eng
    define('LENGTH_CONTENTS_ENG_EJ', 5000); // length contents eng eng -> jp

    define('LENGTH_TITLE_JPN_TO_ENG', 20);  // title jpn to eng
    define('LENGTH_TITLE_ENG_TO_JPN', 100); // title eng to jpn
    define('LENGTH_CONTENT_JPN_TO_ENG', 1000);  // content jpn to eng
    define('LENGTH_CONTENT_ENG_TO_JPN', 5000);  // content eng to jpn

    define('LENGTH_FILE_NAME', 100);    // file name length
    define('TOTAL_FILE_SIZE', 10485760); // 10 * 1024 * 1024

    $intAutoTranslate = 0;  // default = 0

    // get list text translate
    $arrTxtTrans = getListTextTranslate($arrTitleMsg, $intLanguageType);

    if(isset($_POST)) {
        $_SESSION['ANNOUNCE_EDIT_ERROR'] = array();

        if(isset($_POST['action'])) {
            if($_POST['action'] == 'checkFile') {
                $filePath = SHARE_FOLDER.'/'.ANNOUNCE_ATTACHMENT_FOLDER.'/'.base64_decode($_POST['file']);
                if(is_file($filePath)) {
                    echo base64_encode($filePath);
                } else {
                    echo 0;
                }
                exit;
            }

            $arrResultToView = array(
                'trans-error' => '',
                'error' => '',
                'success' => '',
                'confirm' => '',
                'auto' => '',
            );

            // 「翻訳」ボタンクリック後の処理
            if($_POST['action'] == 'translate') {
                $intTypeTranslate = @$_POST['cmbTranslation']
                                        ? ((trim($_POST['cmbTranslation']) == 'ja') ? 0 : 1) : '';
                $strTitleOriginal = @$_POST['txtTitleOriginal']
                                        ? trim($_POST['txtTitleOriginal']) : '';
                $strContentOriginal = @$_POST['txtContentOriginal']
                                        ? trim($_POST['txtContentOriginal']) : '';
                $strChkBoxManualTranslate = @$_POST['chkManualInput']
                                        ? trim($_POST['chkManualInput']) : '';
                $strTitleTranslate = @$_POST['txtTitleTranslation']
                                        ? trim($_POST['txtTitleTranslation']) : '';
                $strContentTranslate = @$_POST['txtContentTranslation']
                                        ? trim($_POST['txtContentTranslation']) : '';

                if($strChkBoxManualTranslate == 'on') {
                    $arrResultToView['success'] = array(
                        'titleTranslate'   => $strTitleTranslate,
                        'contentTranslate' => $strContentTranslate,
                    );
                    echo json_encode($arrResultToView);
                    exit;
                }

                if($strChkBoxManualTranslate == 'off') {
                    if($strTitleTranslate != '' || $strContentTranslate != '') {
                        $arrResultToView['success'] = array(
                            'titleTranslate'   => $strTitleTranslate,
                            'contentTranslate' => $strContentTranslate,
                        );
                        echo json_encode($arrResultToView);
                        exit;
                    }
                }

                // validate
                validateDataOriginal($strTitleOriginal, $strContentOriginal,
                                    $intTypeTranslate, $arrTxtTrans);

                if(count($_SESSION['ANNOUNCE_EDIT_ERROR']) > 0) {
                    $strHtmlError = '';
                    foreach($_SESSION['ANNOUNCE_EDIT_ERROR'] as $error) {
                        $strHtmlError .= '<div>'.$error.'</div>';
                    }
                    $arrResultToView['error'] = $strHtmlError;
                    $arrResultToView['success'] = array(
                        'titleTranslate'   => '',
                        'contentTranslate' => '',
                    );
                    echo json_encode($arrResultToView);
                    exit;
                } else {
                    $strTitleTranslate   = '';
                    $strContentTranslate = '';
                    try {
                        if(AWS_ACCESS_KEY == '' || AWS_SECRET_KEY == '') {
                            $_SESSION['ANNOUNCE_EDIT_ERROR'][] =  $arrTxtTrans['PUBLIC_MSG_010'];
                            if(count($_SESSION['ANNOUNCE_EDIT_ERROR']) > 0) {
                                $strHtmlError = '';
                                foreach($_SESSION['ANNOUNCE_EDIT_ERROR'] as $error) {
                                    $strHtmlError .= '<div>'.$error.'</div>';
                                }
                                $arrResultToView['success'] = array(
                                    'titleTranslate'   => '',
                                    'contentTranslate' => '',
                                );
                                $arrResultToView['error']       = $strHtmlError;
                                $arrResultToView['trans-error'] = 'error';
                                echo json_encode($arrResultToView);
                                exit;
                            }
                        } else {
                            $strTitleTranslate = tranAmazon($strTitleOriginal, $intTypeTranslate);
                            $strContentTranslate = tranAmazon($strContentOriginal, $intTypeTranslate);

                            if((is_array($strTitleTranslate) && $strTitleTranslate['error'] == 1)
                                || (is_array($strContentTranslate) && $strContentTranslate['error'] == 1)
                                || $strTitleTranslate == '' || $strContentTranslate == '') {
                                $_SESSION['ANNOUNCE_EDIT_ERROR'][] =  $arrTxtTrans['PUBLIC_MSG_010'];
                            }

                            if(count($_SESSION['ANNOUNCE_EDIT_ERROR']) > 0) {
                                $strHtmlError = '';
                                foreach($_SESSION['ANNOUNCE_EDIT_ERROR'] as $error) {
                                    $strHtmlError .= '<div>'.$error.'</div>';
                                }
                                $arrResultToView['error'] = $strHtmlError;
                                $arrResultToView['trans-error'] = 'error';
                                echo json_encode($arrResultToView);
                                exit;
                            }

                            $arrResultToView['success'] = array(
                                'titleTranslate'   => $strTitleTranslate,
                                'contentTranslate' => $strContentTranslate,
                            );
                            echo json_encode($arrResultToView);
                            exit;
                        }
                    } catch (\Exception $e) {
                        fncWriteLog(LogLevel['Error'], LogPattern['Error'], $arrTxtTrans['PUBLIC_MSG_010']);
                        $arrResultToView['error'] = $arrTxtTrans['PUBLIC_MSG_010'];
                        $arrResultToView['trans-error'] = 'error';
                        $arrResultToView['success'] = array(
                            'titleTranslate'   => '',
                            'contentTranslate' => '',
                        );
                        echo json_encode($arrResultToView);
                        exit;
                    }
                }
            }

            // 「投稿」ボタンクリック後の処理 - step 1
            if($_POST['action'] == 'pre-update' || $_POST['action'] == 'pre-insert') {
                $intAnnounceNo = @$_POST['announceNo'] ? trim($_POST['announceNo']) : '';

                // write log
                $strLogBtnPost = DISPLAY_TITLE.'　登録(ユーザID = '.$objLoginUserInfo->strUserID.')';
                if($intAnnounceNo != '') {
                    $strLogBtnPost = DISPLAY_TITLE.'　更新(ユーザID = '.$objLoginUserInfo->strUserID.')';
                }
                fncWriteLog(LogLevel['Info'] , LogPattern['Button'], $strLogBtnPost);

                $intTypeTranslate = @$_POST['cmbTranslation']
                                        ? ((trim($_POST['cmbTranslation']) == 'ja') ? 0 : 1) : '';
                $strTitleOriginal = @$_POST['txtTitleOriginal']
                                        ? trim($_POST['txtTitleOriginal']) : '';
                $strContentOriginal = @$_POST['txtContentOriginal']
                                        ? trim($_POST['txtContentOriginal']) : '';
                $strChkBoxManualTranslate = @$_POST['chkManualInput']
                                        ? trim($_POST['chkManualInput']) : '';

                $strTitleTranslate = @$_POST['txtTitleTranslation']
                                        ? trim($_POST['txtTitleTranslation']) : '';
                $strContentTranslate = @$_POST['txtContentTranslation']
                                        ? trim($_POST['txtContentTranslation']) : '';

                $blnFlagHasTransUncheck = false;
                if($strTitleTranslate != '' || $strContentTranslate != '') {
                    $blnFlagHasTransUncheck = true;
                }

                if($strChkBoxManualTranslate == 'off') {
                    if($strTitleTranslate == '' || $strContentTranslate == '') {
                        // 1. validate
                        validateDataOriginal($strTitleOriginal, $strContentOriginal,
                                            $intTypeTranslate, $arrTxtTrans);

                        if(count($_SESSION['ANNOUNCE_EDIT_ERROR']) > 0) {
                            $strHtmlError = '';
                            foreach($_SESSION['ANNOUNCE_EDIT_ERROR'] as $error) {
                                $strHtmlError .= '<div>'.$error.'</div>';
                            }
                            $arrResultToView['error'] = $strHtmlError;
                            $arrResultToView['auto'] = 0;
                            echo json_encode($arrResultToView);
                            exit;
                        }
                    }

                    // 2. uncheck + titleTranslate = null && contentTranslate = null
                    if($strTitleTranslate == '' && $strContentTranslate == '') {
                        try {
                            if(AWS_ACCESS_KEY == '' || AWS_SECRET_KEY == '') {
                                $_SESSION['ANNOUNCE_EDIT_ERROR'][] =  $arrTxtTrans['PUBLIC_MSG_010'];
                                if(count($_SESSION['ANNOUNCE_EDIT_ERROR']) > 0) {
                                    $strHtmlError = '';
                                    foreach($_SESSION['ANNOUNCE_EDIT_ERROR'] as $error) {
                                        $strHtmlError .= '<div>'.$error.'</div>';
                                    }
                                    $arrResultToView['success'] = array(
                                        'titleTranslate'   => '',
                                        'contentTranslate' => '',
                                    );
                                    $arrResultToView['error'] = $strHtmlError;
                                    $arrResultToView['trans-error'] = 'error';
                                    $arrResultToView['confirm'] = $arrTxtTrans['PUBLIC_MSG_041'];
                                    $intAutoTranslate = 0;
                                }
                            } else {
                                $strTitleTranslate = tranAmazon($strTitleOriginal, $intTypeTranslate);
                                $strContentTranslate = tranAmazon($strContentOriginal, $intTypeTranslate);

                                if((is_array($strTitleTranslate) && $strTitleTranslate['error'] == 1)
                                    || (is_array($strContentTranslate) && $strContentTranslate['error'] == 1)
                                    || $strTitleTranslate == '' || $strContentTranslate == '') {
                                    $arrResultToView['confirm'] = $arrTxtTrans['PUBLIC_MSG_041'];
                                }

                                if(count($_SESSION['ANNOUNCE_EDIT_ERROR']) > 0) {
                                    $strHtmlError = '';
                                    foreach($_SESSION['ANNOUNCE_EDIT_ERROR'] as $error) {
                                        $strHtmlError .= '<div>'.$error.'</div>';
                                    }
                                    $arrResultToView['error'] = $strHtmlError;
                                }

                                $arrResultToView['success'] = array(
                                    'titleTranslate' => $strTitleTranslate,
                                    'contentTranslate' => $strContentTranslate,
                                );
                                $intAutoTranslate = 0;
                            }
                        } catch (\Exception $e) {
                            fncWriteLog(LogLevel['Error'] , LogPattern['Error'],
                                        $arrTxtTrans['PUBLIC_MSG_010']);
                            $arrResultToView['error'] = $arrTxtTrans['PUBLIC_MSG_010'];
                            $arrResultToView['trans-error'] = 'error';
                            $arrResultToView['auto'] = 0;
                            echo json_encode($arrResultToView);
                            exit;
                        }
                    }

                    // 4. not error in translate
                    if($strTitleTranslate != '' && $strContentTranslate != '') {
                        $arrResultToView['confirm'] = $arrTxtTrans['ANNOUNCE_EDIT_MSG_003'];
                        $arrResultToView['success'] = array(
                            'titleTranslate' => $strTitleTranslate,
                            'contentTranslate' => $strContentTranslate,
                        );
                        $intAutoTranslate = 0;
                        if($blnFlagHasTransUncheck) {
                            $intAutoTranslate = 1;
                        }
                    } else {
                        // 3. titleTranslate = null || contentTranslate = null
                        if($strTitleTranslate == '' || $strContentTranslate == '') {
                            $arrResultToView['confirm'] = $arrTxtTrans['PUBLIC_MSG_041'];
                        }
                        $arrResultToView['success'] = array(
                            'titleTranslate'   => $strTitleTranslate,
                            'contentTranslate' => $strContentTranslate,
                        );
                        $intAutoTranslate = 0;
                    }
                } else {
                    $arrResultToView['success'] = array(
                        'titleTranslate'   => $strTitleTranslate,
                        'contentTranslate' => $strContentTranslate,
                    );
                    $arrResultToView['confirm'] = $arrTxtTrans['ANNOUNCE_EDIT_MSG_003'];
                    $intAutoTranslate = 1;
                }
                $arrResultToView['auto'] = $intAutoTranslate;
                echo json_encode($arrResultToView);
                exit;
            }

            // 「投稿」ボタンクリック後の処理 - step 2 (to finish)
            if($_POST['action'] == 'update' || $_POST['action'] == 'insert') {
                $files = @$_FILES ? $_FILES : array();
                $arrFileUpload = array();

                // validate file
                if(count($files) > 0) {
                    $strHtmlError = '';
                    $totalFileSize = 0;

                    foreach($files as $inputName => $file) {
                        $target_file = basename($file["name"]);
                        $imageFileType = strtolower(pathinfo($target_file, PATHINFO_EXTENSION));
                        $num = substr($inputName, -1);

                        // if (!isset($file['error']) || is_array($file['error'])) {
                        //     $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_01'.$num].$arrTxtTrans['PUBLIC_MSG_016'];
                        // }

                        // check file extension
                        if(!in_array($imageFileType, array('jpg', 'png'))) {
                            $strError = $arrTxtTrans['PUBLIC_MSG_01'.$num];
                            $strError .= $arrTxtTrans['PUBLIC_MSG_017'];
                            $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $strError;
                        }

                        // preg_match('/(.+)+?(?=\.)/', $target_file, $strFileName);

                        // if(count($strFileName) > 0) {
                        //     $temp = array_values(array_unique($strFileName));
                        //     if(count($temp) > 0) {
                        //         $strFileName = $temp[0];
                        //         // check length file name
                        //         if($strFileName != '' && strlen($strFileName) > LENGTH_FILE_NAME) {
                        //             $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_01'.$num].$arrTxtTrans['PUBLIC_MSG_018'];
                        //         }
                        //     }
                        // }

                        // check length file name
                        if(strlen($target_file) > LENGTH_FILE_NAME) {
                            $strError = $arrTxtTrans['PUBLIC_MSG_01'.$num];
                            $strError .= $arrTxtTrans['PUBLIC_MSG_018'];
                            $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $strError;
                        }

                        $totalFileSize += $file['size'];

                        $arrFileUpload[$num] = array($target_file, $file['tmp_name']);
                    }

                    // check total file size
                    if($totalFileSize > TOTAL_FILE_SIZE) {
                        $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_019'];
                    }

                    if(count($_SESSION['ANNOUNCE_EDIT_ERROR']) > 0) {
                        $strHtmlError = '';
                        foreach($_SESSION['ANNOUNCE_EDIT_ERROR'] as $error) {
                            $strHtmlError .= '<div>'.$error.'</div>';
                        }
                        $arrResultToView['error'] = $strHtmlError;
                        echo json_encode($arrResultToView);
                        exit;
                    }
                }

                if($_POST['mode'] == 1) {
                    // prepare data to insert/update
                    $intAnnounceNo = isset($_POST['id'])
                                        ? trim($_POST['id']) : '';
                    $cmbTranslation = isset($_POST['cmbTranslation'])
                                        ? trim($_POST['cmbTranslation']) : '';
                    $strTxtTitleOriginal = isset($_POST['txtTitleOriginal'])
                                        ? trim($_POST['txtTitleOriginal']) : '';
                    $strTxtContentOriginal = isset($_POST['txtContentOriginal'])
                                        ? trim($_POST['txtContentOriginal']) : '';
                    $strTxtTitleTranslation = isset($_POST['txtTitleTranslation'])
                                        ? trim($_POST['txtTitleTranslation']) : '';
                    $strTxtContentTranslation = isset($_POST['txtContentTranslation'])
                                        ? trim($_POST['txtContentTranslation']) : '';
                    $chkManualInput = isset($_POST['chkManualInput'])
                                        ? ((trim($_POST['chkManualInput']) == 'on') ? 1 : 0) : '';
                    $intLanguageType = ($cmbTranslation != '')
                                        ? (($cmbTranslation == 'ja') ? 0 : 1) : '';
                    $intChkDelete1 = isset($_POST['chkDelete1'])
                                        ? (($_POST['chkDelete1'] == -1) ? 0 : 1) : '';
                    $intChkDelete2 = isset($_POST['chkDelete2'])
                                        ? (($_POST['chkDelete2'] == -1) ? 0 : 1) : '';
                    $intChkDelete3 = isset($_POST['chkDelete3'])
                                        ? (($_POST['chkDelete3'] == -1) ? 0 : 1) : '';
                    $intChkDelete4 = isset($_POST['chkDelete4'])
                                        ? (($_POST['chkDelete4'] == -1) ? 0 : 1) : '';
                    $intChkDelete5 = isset($_POST['chkDelete5'])
                                        ? (($_POST['chkDelete5'] == -1) ? 0 : 1) : '';
                    $intAutoTrans = isset($_POST['auto'])
                                        ? $_POST['auto'] : '';

                    $arrOldData = ($_POST['action'] == 'update') ? getInfoAnnounce($intAnnounceNo, DISPLAY_TITLE) : array();

                    $strFile1 = getStrFileName($intChkDelete1, 1, $arrFileUpload, $arrOldData);
                    $strFile2 = getStrFileName($intChkDelete2, 2, $arrFileUpload, $arrOldData);
                    $strFile3 = getStrFileName($intChkDelete3, 3, $arrFileUpload, $arrOldData);
                    $strFile4 = getStrFileName($intChkDelete4, 4, $arrFileUpload, $arrOldData);
                    $strFile5 = getStrFileName($intChkDelete5, 5, $arrFileUpload, $arrOldData);

                    // prepare data to insert
                    $arrData = array(
                        // 'announce_no' => $intAnnounceNo,
                        'title_jpn' => ($cmbTranslation != '')
                                                ? (($cmbTranslation == 'ja') ? $strTxtTitleOriginal
                                                                             : $strTxtTitleTranslation) : null,
                        'title_eng' => ($cmbTranslation != '')
                                                ? (($cmbTranslation == 'en') ? $strTxtTitleOriginal
                                                                             : $strTxtTitleTranslation) : null,
                        'contents_jpn' => ($cmbTranslation != '')
                                                ? (($cmbTranslation == 'ja') ? $strTxtContentOriginal
                                                                             : $strTxtContentTranslation): null,
                        'contents_eng' => ($cmbTranslation != '')
                                                ? (($cmbTranslation == 'en') ? $strTxtContentOriginal
                                                                             : $strTxtContentTranslation): null,
                        'language_type' => ($cmbTranslation != '')
                                                ? (($cmbTranslation == 'ja') ? 0 : 1) : null,
                        'correction_flag' => $chkManualInput,
                        'language_type' => $intLanguageType,
                        'file_name1' => $strFile1,
                        'file_name2' => $strFile2,
                        'file_name3' => $strFile3,
                        'file_name4' => $strFile4,
                        'file_name5' => $strFile5,
                    );

                    // mode=1 / 以下の登録処理を実行する。/ ①	入力チェックを行う。
                    // no auto translate
                    if($intAutoTrans == 1) {
                        // eng -> jp
                        if($intLanguageType == 1) {
                            // title_jpn
                            if(mb_strlen($arrData['title_jpn']) == 0) {
                                $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_031'];
                            }
                            if(mb_strlen($arrData['title_jpn']) > LENGTH_TITLE_JPN_EJ) {
                                $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_032'];
                            }

                            // contents_jpn
                            if(mb_strlen($arrData['contents_jpn']) == 0) {
                                $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_036'];
                            }
                            if(mb_strlen($arrData['contents_jpn']) > LENGTH_CONTENTS_JPN_EJ) {
                                $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_037'];
                            }
                        } else {
                            // jp -> eng
                            if($intLanguageType == 0) {
                                // title_eng
                                if(mb_strlen($arrData['title_eng']) == 0) {
                                    $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_031'];
                                }
                                if(!mb_detect_encoding($arrData['title_eng'], 'ASCII', true) || strpos($arrData['title_eng'], ',') !== false) {
                                    $_SESSION['ANNOUNCE_EDIT_ERROR'][] =  $arrTxtTrans['PUBLIC_MSG_033'];
                                }
                                if(mb_strlen($arrData['title_eng']) > LENGTH_TITLE_ENG_JE) {
                                    $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_034'];
                                }
                                // if(checkHasFullSize($arrData['title_eng'])) {
                                //     $_SESSION['ANNOUNCE_EDIT_ERROR'][] =  $arrTxtTrans['PUBLIC_MSG_035'];
                                // }

                                // contents_eng
                                if(mb_strlen($arrData['contents_eng']) == 0) {
                                    $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_036'];
                                }
                                if(!mb_detect_encoding($arrData['contents_eng'], 'ASCII', true) || strpos($arrData['contents_eng'], ',') !== false) {
                                    $_SESSION['ANNOUNCE_EDIT_ERROR'][] =  $arrTxtTrans['PUBLIC_MSG_038'];
                                }
                                if(mb_strlen($arrData['contents_eng']) > LENGTH_CONTENTS_ENG_JE) {
                                    $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_039'];
                                }
                                // if(checkHasFullSize($arrData['contents_eng'])) {
                                //     $_SESSION['ANNOUNCE_EDIT_ERROR'][] =  $arrTxtTrans['PUBLIC_MSG_040'];
                                // }
                            }
                        }
                    } else {
                        // auto translate
                        // jp -> eng
                        if($intLanguageType == 0) {
                            // title_jpn
                            if(mb_strlen($arrData['title_jpn']) == 0) {
                                $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_021'];
                            }
                            if(mb_strlen($arrData['title_jpn']) > LENGTH_TITLE_JPN_JE) {
                                $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_022'];
                            }

                            // contents_jpn
                            if(mb_strlen($arrData['contents_jpn']) == 0) {
                                $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_026'];
                            }
                            if(mb_strlen($arrData['contents_jpn']) > LENGTH_CONTENTS_JPN_JE) {
                                $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_027'];
                            }
                        } else {
                            // eng -> jp
                            if($intLanguageType == 1) {
                                // title_eng
                                if(mb_strlen($arrData['title_eng']) == 0) {
                                    $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_021'];
                                }
                                if(!mb_detect_encoding($arrData['title_eng'], 'ASCII', true) || strpos($arrData['title_eng'], ',') !== false) {
                                    $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_023'];
                                }
                                if(mb_strlen($arrData['title_eng']) > LENGTH_TITLE_ENG_EJ) {
                                    $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_024'];
                                }
                                // if(checkHasFullSize($arrData['title_eng'])) {
                                //     $_SESSION['ANNOUNCE_EDIT_ERROR'][] =  $arrTxtTrans['PUBLIC_MSG_025'];
                                // }

                                // contents_eng
                                if(mb_strlen($arrData['contents_eng']) == 0) {
                                    $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_026'];
                                }
                                if(!mb_detect_encoding($arrData['contents_eng'], 'ASCII', true) || strpos($arrData['contents_eng'], ',') !== false) {
                                    $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_028'];
                                }
                                if(mb_strlen($arrData['contents_eng']) > LENGTH_CONTENTS_ENG_EJ) {
                                    $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_029'];
                                }
                                // if(checkHasFullSize($arrData['contents_eng'])) {
                                //     $_SESSION['ANNOUNCE_EDIT_ERROR'][] =  $arrTxtTrans['PUBLIC_MSG_030'];
                                // }
                            }
                        }
                    }

                    if(count($_SESSION['ANNOUNCE_EDIT_ERROR']) > 0) {
                        $strHtmlError = '';
                        foreach($_SESSION['ANNOUNCE_EDIT_ERROR'] as $error) {
                            $strHtmlError .= '<div>'.$error.'</div>';
                        }
                        $arrResultToView['error'] = $strHtmlError;
                        echo json_encode($arrResultToView);
                        exit;
                    }

                    if($_POST['action'] == 'update') {
                        try {
                            // 以下の条件でお知らせテーブル[t_announce]を更新する。登録要領は以下の通りとする。
                            $strSQL = " UPDATE t_announce SET "
                                    . " title_jpn = :title_jpn "
                                    . " , title_eng = :title_eng "
                                    . " , contents_jpn = :contents_jpn "
                                    . " , contents_eng = :contents_eng "
                                    . " , language_type = :language_type "
                                    . " , correction_flag = :correction_flag "
                                    . " , file_name1 = :file_name1 "
                                    . " , file_name2 = :file_name2 "
                                    . " , file_name3 = :file_name3 "
                                    . " , file_name4 = :file_name4 "
                                    . " , file_name5 = :file_name5 "
                                    . " , untranslated = 1 "
                                    . " , up_user_no = :up_user_no "
                                    . " , up_date = CURRENT_TIMESTAMP "
                                    . " WHERE announce_no = :announce_no; ";

                            $objStmt = $GLOBALS['g_dbaccess']->funcPrepare($strSQL);
                            $objStmt->bindParam(':title_jpn', $arrData['title_jpn']);
                            $objStmt->bindParam(':title_eng', $arrData['title_eng']);
                            $objStmt->bindParam(':contents_jpn', $arrData['contents_jpn']);
                            $objStmt->bindParam(':contents_eng', $arrData['contents_eng']);
                            $objStmt->bindParam(':language_type', $arrData['language_type']);
                            $objStmt->bindParam(':correction_flag', $arrData['correction_flag']);
                            $objStmt->bindParam(':file_name1', $arrData['file_name1']);
                            $objStmt->bindParam(':file_name2', $arrData['file_name2']);
                            $objStmt->bindParam(':file_name3', $arrData['file_name3']);
                            $objStmt->bindParam(':file_name4', $arrData['file_name4']);
                            $objStmt->bindParam(':file_name5', $arrData['file_name5']);
                            $objStmt->bindParam(':up_user_no', $objLoginUserInfo->intUserNo);
                            $objStmt->bindParam(':announce_no', $intAnnounceNo);

                            $strLogSql = DISPLAY_TITLE.' '.$strSQL;
                            $strLogSql = str_replace(':title_jpn', $arrData['title_jpn'], $strLogSql);
                            $strLogSql = str_replace(':title_eng', $arrData['title_eng'], $strLogSql);
                            $strLogSql = str_replace(':contents_jpn', $arrData['contents_jpn'], $strLogSql);
                            $strLogSql = str_replace(':contents_eng', $arrData['contents_eng'], $strLogSql);
                            $strLogSql = str_replace(':language_type', $arrData['language_type'], $strLogSql);
                            $strLogSql = str_replace(':correction_flag', $arrData['correction_flag'], $strLogSql);
                            $strLogSql = str_replace(':file_name1', $arrData['file_name1'], $strLogSql);
                            $strLogSql = str_replace(':file_name2', $arrData['file_name2'], $strLogSql);
                            $strLogSql = str_replace(':file_name3', $arrData['file_name3'], $strLogSql);
                            $strLogSql = str_replace(':file_name4', $arrData['file_name4'], $strLogSql);
                            $strLogSql = str_replace(':file_name5', $arrData['file_name5'], $strLogSql);
                            $strLogSql = str_replace(':up_user_no', $objLoginUserInfo->intUserNo, $strLogSql);
                            $strLogSql = str_replace(':announce_no', $intAnnounceNo, $strLogSql);
                            fncWriteLog(LogLevel['Info'] , LogPattern['Sql'], $strLogSql);
                            $objStmt->execute();
                        } catch (\Exception $e) {
                            fncWriteLog(LogLevel['Error'], LogPattern['Error'], $arrTxtTrans['PUBLIC_MSG_002']);
                            $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_002'];
                            if(count($_SESSION['ANNOUNCE_EDIT_ERROR']) > 0) {
                                $strHtmlError = '';
                                foreach($_SESSION['ANNOUNCE_EDIT_ERROR'] as $error) {
                                    $strHtmlError .= '<div>'.$error.'</div>';
                                }
                                $arrResultToView['error'] = $strHtmlError;
                                echo json_encode($arrResultToView);
                                exit;
                            }
                        }
                    }

                    if($_POST['action'] == 'insert') {
                        // お知らせテーブルのシーケンス[announce_sequence]から採番したキーを取得する。
                        $nextAnnounceNo = getNextAnnouce();
                        if($nextAnnounceNo == 0) {
                            fncWriteLog(LogLevel['Error'], LogPattern['Error'], $arrTxtTrans['PUBLIC_MSG_002']);
                            $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_002'];
                            if(count($_SESSION['ANNOUNCE_EDIT_ERROR']) > 0) {
                                $strHtmlError = '';
                                foreach($_SESSION['ANNOUNCE_EDIT_ERROR'] as $error) {
                                    $strHtmlError .= '<div>'.$error.'</div>';
                                }
                                $arrResultToView['error'] = $strHtmlError;
                                echo json_encode($arrResultToView);
                                exit;
                            }
                        }

                        try {
                            // 以下の条件でお知らせテーブル[t_announce]を更新する。登録要領は以下の通りとする。
                            $strSQL = " INSERT INTO t_announce "
                                    . " ( "
                                    . "     announce_no, "
                                    . "     title_jpn, "
                                    . "     title_eng, "
                                    . "     contents_jpn, "
                                    . "     contents_eng, "
                                    . "     language_type, "
                                    . "     correction_flag, "
                                    . "     file_name1, "
                                    . "     file_name2, "
                                    . "     file_name3, "
                                    . "     file_name4, "
                                    . "     file_name5, "
                                    . "     untranslated, "
                                    . "     reg_user_no, "
                                    . "     reg_date, "
                                    . "     up_user_no, "
                                    . "     up_date "
                                    . " ) VALUES ( "
                                    . "     :announce_no, "
                                    . "     :title_jpn, "
                                    . "     :title_eng, "
                                    . "     :contents_jpn, "
                                    . "     :contents_eng, "
                                    . "     :language_type, "
                                    . "     :correction_flag, "
                                    . "     :file_name1, "
                                    . "     :file_name2, "
                                    . "     :file_name3, "
                                    . "     :file_name4, "
                                    . "     :file_name5, "
                                    . "     1, "
                                    . "     :reg_user_no, "
                                    . "     CURRENT_TIMESTAMP, "
                                    . "     :up_user_no, "
                                    . "     CURRENT_TIMESTAMP "
                                    . " ); ";
                            $intAnnounceNo = $nextAnnounceNo[0]['announce_no'];
                            $objStmt = $GLOBALS['g_dbaccess']->funcPrepare($strSQL);
                            $objStmt->bindParam(':announce_no', $intAnnounceNo);
                            $objStmt->bindParam(':title_jpn', $arrData['title_jpn']);
                            $objStmt->bindParam(':title_eng', $arrData['title_eng']);
                            $objStmt->bindParam(':contents_jpn', $arrData['contents_jpn']);
                            $objStmt->bindParam(':contents_eng', $arrData['contents_eng']);
                            $objStmt->bindParam(':language_type', $arrData['language_type']);
                            $objStmt->bindParam(':correction_flag', $arrData['correction_flag']);
                            $objStmt->bindParam(':file_name1', $arrData['file_name1']);
                            $objStmt->bindParam(':file_name2', $arrData['file_name2']);
                            $objStmt->bindParam(':file_name3', $arrData['file_name3']);
                            $objStmt->bindParam(':file_name4', $arrData['file_name4']);
                            $objStmt->bindParam(':file_name5', $arrData['file_name5']);
                            $objStmt->bindParam(':reg_user_no', $objLoginUserInfo->intUserNo);
                            $objStmt->bindParam(':up_user_no', $objLoginUserInfo->intUserNo);

                            $strLogSql = DISPLAY_TITLE.' '.$strSQL;
                            $strLogSql = str_replace(':announce_no', $intAnnounceNo, $strLogSql);
                            $strLogSql = str_replace(':title_jpn', $arrData['title_jpn'], $strLogSql);
                            $strLogSql = str_replace(':title_eng', $arrData['title_eng'], $strLogSql);
                            $strLogSql = str_replace(':contents_jpn', $arrData['contents_jpn'], $strLogSql);
                            $strLogSql = str_replace(':contents_eng', $arrData['contents_eng'], $strLogSql);
                            $strLogSql = str_replace(':language_type', $arrData['language_type'], $strLogSql);
                            $strLogSql = str_replace(':correction_flag', $arrData['correction_flag'], $strLogSql);
                            $strLogSql = str_replace(':file_name1', $arrData['file_name1'], $strLogSql);
                            $strLogSql = str_replace(':file_name2', $arrData['file_name2'], $strLogSql);
                            $strLogSql = str_replace(':file_name3', $arrData['file_name3'], $strLogSql);
                            $strLogSql = str_replace(':file_name4', $arrData['file_name4'], $strLogSql);
                            $strLogSql = str_replace(':file_name5', $arrData['file_name5'], $strLogSql);
                            $strLogSql = str_replace(':reg_user_no', $objLoginUserInfo->intUserNo, $strLogSql);
                            $strLogSql = str_replace(':up_user_no', $objLoginUserInfo->intUserNo, $strLogSql);
                            fncWriteLog(LogLevel['Info'] , LogPattern['Sql'], $strLogSql);
                            $objStmt->execute();
                        } catch (\Exception $e) {
                            fncWriteLog(LogLevel['Error'], LogPattern['Error'], $arrTxtTrans['PUBLIC_MSG_002']);
                            $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_002'];
                            if(count($_SESSION['ANNOUNCE_EDIT_ERROR']) > 0) {
                                $strHtmlError = '';
                                foreach($_SESSION['ANNOUNCE_EDIT_ERROR'] as $error) {
                                    $strHtmlError .= '<div>'.$error.'</div>';
                                }
                                $arrResultToView['error'] = $strHtmlError;
                                echo json_encode($arrResultToView);
                                exit;
                            }
                        }
                    }

                    // prepare data file to upload
                    $arrFolderRemove = array();
                    if($intChkDelete1 == 1) {
                        $arrFolderRemove[] = 1;
                    }
                    if($intChkDelete2 == 1) {
                        $arrFolderRemove[] = 2;
                    }
                    if($intChkDelete3 == 1) {
                        $arrFolderRemove[] = 3;
                    }
                    if($intChkDelete4 == 1) {
                        $arrFolderRemove[] = 4;
                    }
                    if($intChkDelete5 == 1) {
                        $arrFolderRemove[] = 5;
                    }
                    uploadFile($intAnnounceNo, $arrFolderRemove, $files);

                    // send mail
                    $arrUser = getDataMUserSendMail('ANNOUNCE_MAIL', DISPLAY_TITLE);
                    if($arrUser == 0) {
                        $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_001'];
                        if(count($_SESSION['ANNOUNCE_EDIT_ERROR']) > 0) {
                            $strHtmlError = '';
                            foreach($_SESSION['ANNOUNCE_EDIT_ERROR'] as $error) {
                                $strHtmlError .= '<div>'.$error.'</div>';
                            }
                            $arrResultToView['error'] = $strHtmlError;
                            echo json_encode($arrResultToView);
                            exit;
                        }
                    } else {
                        $arrMail = array(
                            'jpn' => array(),
                            'eng' => array(),
                        );

                        $arrTempMailJP = array();
                        $arrTempMailEN = array();
                        foreach($arrUser as $user) {
                            if($user['language_type'] == 0) {
                                if(count($arrTempMailJP) == 0) {
                                    array_push($arrTempMailJP, $user['mail_address']);
                                    $arrMail['jpn'][] = array(
                                        'USER_NAME' => $user['user_name'],
                                        'MAIL_ADDRESS' => $user['mail_address'],
                                    );
                                } else {
                                    if(!in_array($user['mail_address'], $arrTempMailJP)) {
                                        array_push($arrTempMailJP, $user['mail_address']);
                                        $arrMail['jpn'][] = array(
                                            'USER_NAME' => $user['user_name'],
                                            'MAIL_ADDRESS' => $user['mail_address'],
                                        );
                                    }
                                }
                            } else {
                                if(count($arrTempMailEN) == 0) {
                                    array_push($arrTempMailEN, $user['mail_address']);
                                    $arrMail['eng'][] = array(
                                        'USER_NAME' => $user['user_name'],
                                        'MAIL_ADDRESS' => $user['mail_address'],
                                    );
                                } else {
                                    if(!in_array($user['mail_address'], $arrTempMailEN)) {
                                        array_push($arrTempMailEN, $user['mail_address']);
                                        $arrMail['eng'][] = array(
                                            'USER_NAME' => $user['user_name'],
                                            'MAIL_ADDRESS' => $user['mail_address'],
                                        );
                                    }
                                }
                            }
                        }

                        $strSQL = ' SELECT * FROM t_announce WHERE t_announce.announce_no = ? ';
                        $arrResult = fncSelectOne($strSQL, array($intAnnounceNo), DISPLAY_TITLE);

                        if($arrResult == 0) {
                            $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_001'];
                            if(count($_SESSION['ANNOUNCE_EDIT_ERROR']) > 0) {
                                $strHtmlError = '';
                                foreach($_SESSION['ANNOUNCE_EDIT_ERROR'] as $error) {
                                    $strHtmlError .= '<div>'.$error.'</div>';
                                }
                                $arrResultToView['error'] = $strHtmlError;
                                echo json_encode($arrResultToView);
                                exit;
                            }
                        }

                        $arrSubject = array(
                            'jpn' => '',
                            'eng' => '',
                        );
                        $arrBody = array(
                            'jpn' => '',
                            'eng' => '',
                        );
                        if(count($arrResult) > 0) {
                            $arrSubject['jpn'] = $arrResult['TITLE_JPN'];
                            $arrSubject['eng'] = $arrResult['TITLE_ENG'];

                            $arrBody['jpn'] = $arrResult['CONTENTS_JPN'];
                            $arrBody['eng'] = $arrResult['CONTENTS_ENG'];
                        }

                        foreach($arrMail as $strLang => $arrListMail) {
                            if(count($arrListMail) > 0) {
                                $strSubjectSend = ($strLang == 'jpn') ? $arrSubject['jpn'] : $arrSubject['eng'];
                                $strBodySend    = ($strLang == 'jpn') ? $arrBody['jpn'] : $arrBody['eng'];

                                if(trim($strSubjectSend) == '') {
                                    $strSubjectSend = ($strLang == 'jpn') ? $arrSubject['eng'] : $arrSubject['jpn'];
                                }

                                if(trim($strBodySend) == '') {
                                    $strBodySend = ($strLang == 'jpn') ? $arrBody['eng'] : $arrBody['jpn'];
                                }

                                fncSendMail($arrListMail, $strSubjectSend, $strBodySend, '');
                            }
                        }
                    }

                    $arrResultToView['success'] = 1;
                    echo json_encode($arrResultToView);
                    exit;
                }
            }
        }
    }

    /**
     * get next value announce_no
     *
     * @create 2020/03/13 AKB Chien
     * @update
     * @param integer $intId           announce_no update
     * @param array $arrRemoveFolder   old folder need replace or remove
     * @param array $arrFileUpload     new folder to replace old folder or upload new
     * @return boolean true:成功, false:失敗
     */
    function uploadFile($intId, $arrRemoveFolder, $arrFileUpload) {
        $strPath = SHARE_FOLDER.'/'.ANNOUNCE_ATTACHMENT_FOLDER.'/'.$intId;
        try {
            // delete
            if(count($arrRemoveFolder) > 0) {
                foreach($arrRemoveFolder as $strFolderName) {
                    $pathOldFolder = $strPath.'/'.$strFolderName;
                    if(is_dir($pathOldFolder)) {
                        $arrFileFolder = glob($pathOldFolder.'/*');	// get all file and folder
                        if(count($arrFileFolder) > 0) {
                            foreach($arrFileFolder as $arrItem) {
                                if(!is_file($arrItem)) {
                                    $strPathTemp = glob($arrItem.'/*');	// get all file and folder
                                    // remove folder file_name1 -> 5
                                    foreach($strPathTemp as $objFile) { // iterate files
                                        if(is_file($objFile)) {
                                            unlink($objFile); // delete file
                                        } else {
                                            $pathTemp_2 = glob($objFile.'/*');	// get all file and folder
                                            foreach($pathTemp_2 as $objFile_2) {
                                                if(is_file($objFile_2)) {
                                                    unlink($objFile_2);
                                                }
                                            }
                                            rmdir($objFile);
                                        }
                                    }
                                    rmdir($arrItem);
                                } else {
                                    unlink($arrItem); // delete file
                                }
                            }
                            rmdir($pathOldFolder);
                        }
                    }
                }
            }
            // upload
            if(count($arrFileUpload) > 0) {
                foreach($arrFileUpload as $key => $file) {
                    $idFile = substr($key, -1);
                    $pathUpload = $strPath.'/'.$idFile;
                    $target_file = $pathUpload."/".basename($file["name"]);
                    if(!is_dir($pathUpload)) {
                        // create folder 1 -> 5
                        if (mkdir($pathUpload, 0755, true)) {
                            // upload file to folder 1 -> 5
                            move_uploaded_file($file["tmp_name"], $target_file);
                        }
                    } else {
                        move_uploaded_file($file["tmp_name"], $target_file);
                    }
                }
            }
            return true;
        } catch (\Exception $e) {
            fncWriteLog(LogLevel['Error'], LogPattern['Error'], $e->getMessage());
            return false;
        }
        return true;
    }

    /**
     * get next value announce_no
     *
     * @create 2020/03/13 AKB Chien
     * @update
     * @param
     * @return array $arrResult || 0: exception
     */
    function getNextAnnouce() {
        try {
            //
            $strSQL = ' SELECT NEXT VALUE FOR announce_sequence AS announce_no ';
            $objStmt = $GLOBALS['g_dbaccess']->funcPrepare($strSQL);
            $strLogSql = DISPLAY_TITLE.' '.$strSQL;
            fncWriteLog(LogLevel['Info'] , LogPattern['Sql'], $strLogSql);
            $objStmt->execute();
            $arrResult = $objStmt->fetchAll(PDO::FETCH_ASSOC);
            return $arrResult;
        } catch (\Excoption $e) {
            fncWriteLog(LogLevel['Error'], LogPattern['Error'], $e->getMessage());
            return 0;
        }
    }

    /**
     * get string file name replace or keep
     *
     * @create 2020/03/13 AKB Chien
     * @update
     * @param boolean $intFlag          flag check file remove or replace
     * @param integer $intFileNumber    file number 1 -> 5
     * @param array $arrFile            list file upload
     * @param array $arrOldData         list file in database
     * @return string $strFileName      file name return
     */
    function getStrFileName($intFlag, $intFileNumber, $arrFile, $arrOldData) {
        $strFileName = null;
        if($intFlag == 1 || $intFlag == '') {
            if(isset($arrFile[$intFileNumber])) {
                $strFileName = $arrFile[$intFileNumber][0];
            } else {
                if(is_array($arrOldData) && count($arrOldData) > 0
                    && $intFlag == '') {
                    $strFileName = $arrOldData[0]['FILE_NAME'.$intFileNumber];
                }
            }
        }
        return $strFileName;
    }

    /**
     * check validate string with condition in document
     *
     * @create 2020/03/13 AKB Chien
     * @update
     * @param string $strTitleOriginal      title origin
     * @param string $strContentOriginal    content origin
     * @param integer $intTypeTranslate     title translate
     * @param array $arrTxtTrans            content translate
     * @return
     */
    function validateDataOriginal($strTitleOriginal, $strContentOriginal,
                                    $intTypeTranslate, $arrTxtTrans) {
        if($strTitleOriginal == '') {
            $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_021'];
        }
        if($strContentOriginal == '') {
            $_SESSION['ANNOUNCE_EDIT_ERROR'][] = $arrTxtTrans['PUBLIC_MSG_026'];
        }

        // ja -> eng
        $constTitleLength = ($intTypeTranslate == 0) ? LENGTH_TITLE_JPN_TO_ENG : LENGTH_TITLE_ENG_TO_JPN;
        // eng -> ja
        $constContentLength = ($intTypeTranslate == 0) ? LENGTH_CONTENT_JPN_TO_ENG : LENGTH_CONTENT_ENG_TO_JPN;

        if(mb_strlen($strTitleOriginal) > $constTitleLength) {
            // title length > 20 (jpn -> eng) || 100 (eng -> jpn)
            $_SESSION['ANNOUNCE_EDIT_ERROR'][] = ($intTypeTranslate == 0) ? $arrTxtTrans['PUBLIC_MSG_022'] : $arrTxtTrans['PUBLIC_MSG_024'];
        }
        if(mb_strlen($strContentOriginal) > $constContentLength) {
            // content length > 1000 (jpn -> eng) || 5000 (eng -> jpn)
            $_SESSION['ANNOUNCE_EDIT_ERROR'][] = ($intTypeTranslate == 0) ? $arrTxtTrans['PUBLIC_MSG_027'] : $arrTxtTrans['PUBLIC_MSG_029'];
        }

        if($intTypeTranslate == 1) {
            // title has non-ASCII char
            if(!mb_detect_encoding($strTitleOriginal, 'ASCII', true)
                || strpos($strTitleOriginal, ',') !== false) {
                $_SESSION['ANNOUNCE_EDIT_ERROR'][] =  $arrTxtTrans['PUBLIC_MSG_023'];
            }
            // content has non-ASCII char
            if(!mb_detect_encoding($strContentOriginal, 'ASCII', true)
                || strpos($strContentOriginal, ',') !== false) {
                $_SESSION['ANNOUNCE_EDIT_ERROR'][] =  $arrTxtTrans['PUBLIC_MSG_028'];
            }

            // title has full-size char
            // if(checkHasFullSize($strTitleOriginal)) {
            //     $_SESSION['ANNOUNCE_EDIT_ERROR'][] =  $arrTxtTrans['PUBLIC_MSG_025'];
            // }
            // content has full-size char
            // if(checkHasFullSize($strContentOriginal)) {
            //     $_SESSION['ANNOUNCE_EDIT_ERROR'][] =  $arrTxtTrans['PUBLIC_MSG_030'];
            // }
        }
    }

    /**
     * check string has char full size
     *
     * @create 2020/03/13 AKB Chien
     * @update
     * @param string $str: input need to check
     * @return boolean true:失敗、false:成功
     */
    function checkHasFullSize($str) {
        return (strlen($str) != strlen(utf8_decode($str))) ? true : false;
    }
?>