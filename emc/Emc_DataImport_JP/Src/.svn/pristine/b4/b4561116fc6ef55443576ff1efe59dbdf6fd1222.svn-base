<?php
// -------------------------------------------------------------------------
//	function	:
//	create		: 2020/02/17 KBS Tamnv
//	update		:
// -------------------------------------------------------------------------

require_once('common/common.php');
require_once('common/validate_user.php');



$arrMSG = [
    'PUBLIC_TEXT_001',
    'PUBLIC_TEXT_002',
    'PUBLIC_TEXT_003',
    'PUBLIC_TEXT_004',
    'PUBLIC_TEXT_005',
    'PUBLIC_TEXT_006',
    'PUBLIC_TEXT_007',
    'PUBLIC_TEXT_008',
    'PUBLIC_MSG_009',

    'PUBLIC_BUTTON_001',
    'PUBLIC_BUTTON_002',
    'PUBLIC_BUTTON_003',
    'PUBLIC_BUTTON_004',
    'PUBLIC_BUTTON_005',
    'QUERY_VIEW_TEXT_001',
    'USER_PERM_MSG_001',

    'QUERY_VIEW_MSG_001',
    'QUERY_VIEW_MSG_002',
    'QUERY_VIEW_MSG_003',
    'QUERY_VIEW_MSG_004',

];

if(!isset($arrayText)){
    $arrayText = array();
}
$arrayText = array_merge(getListTextTranslate($arrMSG,$objLoginUserInfo->intLanguageType),$arrayText);

if(!$objLoginUserInfo->intQueryRegPerm && $_SERVER['REQUEST_URI']=='/information_sharing/query_view.php'){
    $alertMsg = $arrayText['PUBLIC_MSG_009'];
    echo "
        <script>
            alert('".$alertMsg."');
            window.location.href = 'login.php';
        </script>
    ";
}



$arrayIdInCompany = get_all_id_in_company($objLoginUserInfo->intUserNo);
$mapArrIds = array();
foreach ($arrayIdInCompany as $item){
    $mapArrIds[] = $item['USER_NO'];
}

$check24h = 0;
$isAjax = @$_POST['isAjax'];
if(@$_POST['action'] == 'insert_query'){
    $validate = validateInputText($_POST,$arrayText,$objLoginUserInfo);
    if(count($validate)){
        $data['error'] = $validate;
        echo json_encode($data);
    }else{
        $inserData = insert($_POST,$objLoginUserInfo);
        echo 1;
        /*if($inserData){
            $listQuery = get_query($objLoginUserInfo,$check24h,$isAjax);
            $arrUserName = getMapName($listQuery,$endLang);
            return $listQuery;
        }*/
    }
    //ログ書き込み
}else{
    if(isset($_POST['typeOfTime'])){
        $check24h = $_POST['typeOfTime'];
    }

    $listQuery = get_query($objLoginUserInfo,$check24h,$isAjax);
    if(count($listQuery)){
        $arrUserName = getMapName($listQuery,$endLang);
    }

    $viewLog = '問い合わせ画面　投稿(ユーザID = '.$objLoginUserInfo->strUserID.') '.(isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : null);
    fncWriteLog(LogLevel['Info'] , LogPattern['View'], $viewLog);
}

function validateInputText($data,$arrayText,$objLoginUserInfo){
    $maxlange = 100;
    if($objLoginUserInfo->intLanguageType){
        $maxlange = 200;
    }
    $error = array();
    if(!$data['txtSource']){
        $error['er-source'] = $arrayText['QUERY_VIEW_MSG_001'];
    }else{
        if(strlen($data['txtSource'])>$maxlange){
            $error['er-source'] = $arrayText['QUERY_VIEW_MSG_002'];
        }
    }

    if(!$data['txtTarget'] && $data['ckeckMan'] =='true'){
        $error['er-target'] = $arrayText['QUERY_VIEW_MSG_003'];
    }else{
        if(strlen($data['txtTarget'])>$maxlange){
            $error['er-target'] = $arrayText['QUERY_VIEW_MSG_004'];
        }
    }

    return $error;

}


function getMapName($listQuery,$endLang){
    $arrAllIds = array();
    $arrUserName = array();
    foreach ($listQuery as $item){
        $arrAllIds[$item['QUERY_USER_NO']] = $item['QUERY_USER_NO'];
    }

    $dataUserName = get_query_name_in_array($arrAllIds);
    foreach ($dataUserName as $us){
        $arrUserName[$us['USER_NO']] = $us['ABBREVIATIONS'.$endLang];
    }
    return $arrUserName;
}

function insert($data,$objLoginUserInfo){
    $flag = 1;
    if($data['ckeckMan'] == 'false'){
        $flag = 0;
        $type = 0;
        if($data['sleTran']=='ej'){
            $type = 1;
        }

        $data['txtTarget'] = tranAmazon($data['txtSource'],$type);
    }
    if($data['sleTran']=='ej'){
        $enTxt = $data['txtSource'];
        $jpTxt = $data['txtTarget'];
    }else{
        $enTxt = $data['txtTarget'];
        $jpTxt = $data['txtSource'];
    }
    $strSQL = '';
    $strSQL .= ' INSERT INTO t_query ';
    $strSQL .= ' VALUES(';
    $strSQL .= '(SELECT ISNULL(MAX( QUERY_NO ), 0)+ 1  FROM t_query),';
    $strSQL .= ':QUERY_DATE,';
    $strSQL .= ':QUERY_USER_NO,';
    $strSQL .= ':CONTENT_JPN,';
    $strSQL .= ':CONTENTS_ENG,';
    $strSQL .= ':LANGUAGE_TYPE,';
    $strSQL .= ':CORRECTION_FLAG';
    $strSQL .= ')';
    $objStmt = $GLOBALS['g_dbaccess']->funcPrepare($strSQL);
    $date = date('Y-m-d H:i:s');
    $objStmt->bindParam(':QUERY_DATE', $date);
    $objStmt->bindParam(':QUERY_USER_NO', $objLoginUserInfo->intUserNo);
    $objStmt->bindParam(':CONTENT_JPN', $jpTxt);
    $objStmt->bindParam(':CONTENTS_ENG', $enTxt);
    $objStmt->bindParam(':LANGUAGE_TYPE', $objLoginUserInfo->intLanguageType);
    $objStmt->bindParam(':CORRECTION_FLAG',$flag,PDO::PARAM_INT);
    $strLogSql = ' 問い合わせ画面' .$strSQL;
    $strLogSql = str_replace(':QUERY_DATE', date('Y-m-d H:i:s'),$strLogSql);
    $strLogSql = str_replace(':QUERY_USER_NO', $objLoginUserInfo->intUserNo,$strLogSql);
    $strLogSql = str_replace(':CONTENT_JPN', $jpTxt,$strLogSql);
    $strLogSql = str_replace(':CONTENTS_ENG', $enTxt,$strLogSql);
    $strLogSql = str_replace(':LANGUAGE_TYPE', $objLoginUserInfo->intLanguageType,$strLogSql);
    $strLogSql = str_replace(':CORRECTION_FLAG', $flag,$strLogSql);
    fncWriteLog(LogLevel['Info'] , LogPattern['Sql'], $strLogSql);
    return $objStmt->execute();
}

function get_query($objLoginUserInfo,$check24h,$isAjax = 0){
    if($isAjax){
        $maxQueryId = isset($_SESSION["maxQueryId"]) ? $_SESSION["maxQueryId"] : 0 ;
    }else{
        $maxQueryId = 0;
    }
    $strSQL = '';
    $strSQL .= ' SELECT * FROM t_query ';
    $strSQL .= ' WHERE';
    if($check24h){
        $strSQL .= ' QUERY_DATE >= DATEADD(day, -1, GETDATE()) AND';
    }else{
        $strSQL .= ' QUERY_DATE >= DATEADD(day, -'.QUERY_VIEW_DAY.', GETDATE()) AND';
    }
    $strSQL .= ' QUERY_NO > :QUERY_NO_MAX';
    $objStmt = $GLOBALS['g_dbaccess']->funcPrepare($strSQL);
    $objStmt->bindParam(':QUERY_NO_MAX', $maxQueryId);
    $strLogSql = ' 問い合わせ画面' .$strSQL;
    $strLogSql = str_replace(':QUERY_NO_MAX', $maxQueryId,$strLogSql);
    fncWriteLog(LogLevel['Info'] , LogPattern['Sql'], $strLogSql);
    $objStmt->execute();
    $arrResult = $objStmt->fetchAll(PDO::FETCH_ASSOC);
    $_SESSION["maxQueryId"] = count($arrResult) ? end($arrResult)['QUERY_NO'] : $maxQueryId ;
    return $arrResult;
}

function get_all_id_in_company($userId){
    $strSQL = '';
    $strSQL .= ' SELECT USER_NO FROM m_user ';
    $strSQL .= ' WHERE';
    $strSQL .= ' COMPANY_NO = (SELECT COMPANY_NO FROM m_user WHERE USER_NO = :USER_NO ) ';
    $objStmt = $GLOBALS['g_dbaccess']->funcPrepare($strSQL);

    $objStmt->bindParam(':USER_NO', $userId);
    $strLogSql = '問い合わせ画面'.$strSQL;
    $strLogSql = str_replace(':USER_NO', $userId,$strLogSql);
    fncWriteLog(LogLevel['Info'] , LogPattern['Sql'], $strLogSql);
    $objStmt->execute();
    $arrResult = $objStmt->fetchAll(PDO::FETCH_ASSOC);
    return $arrResult;
}
function get_query_name_in_array($userId){
    //$listUserIds = implode(",",array_map('intval', $userId));
    $strSQL = '';
    $strSQL .= ' SELECT USER_NO,USER_NAME,ABBREVIATIONS_ENG,ABBREVIATIONS_JPN FROM m_user ';
    $strSQL .= ' INNER JOIN m_company ON m_company.COMPANY_NO = m_user.COMPANY_NO';
    $strSQL .= ' WHERE';
    $strSQL .= ' USER_NO IN ('.implode(",",array_map('intval', $userId)).') ';
    $objStmt = $GLOBALS['g_dbaccess']->funcPrepare($strSQL);
    $strLogSql = '問い合わせ画面 '.$strSQL;
    fncWriteLog(LogLevel['Info'] , LogPattern['Sql'], $strLogSql);
    $objStmt->execute();
    $arrResult = $objStmt->fetchAll(PDO::FETCH_ASSOC);
    return $arrResult;
}


?>
